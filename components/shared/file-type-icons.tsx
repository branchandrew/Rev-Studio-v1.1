import type React from "react"
import { cn } from "@/lib/utils"

// Base icon component
interface FileTypeIconProps extends React.HTMLAttributes<HTMLDivElement> {
  label?: string
  showLabel?: boolean
  size?: "sm" | "md" | "lg"
  variant?: "icon" | "pill" | "labeled"
}

// File type mapping
export type FileType =
  | "folder"
  | "word"
  | "clip"
  | "captions"
  | "csv"
  | "transcript"
  | "aiInsight"
  | "humanCaptions"
  | "pdf"
  | "videoUpload"
  | "subtitles"
  | "humanTranscript"
  | "textUpload"

// File type to display name mapping
const fileTypeToLabel: Record<FileType, string> = {
  folder: "Folder",
  word: "Word",
  clip: "Clip",
  captions: "Captions",
  csv: "CSV",
  transcript: "Transcript",
  aiInsight: "AI Insight",
  humanCaptions: "Human captions",
  pdf: "PDF",
  videoUpload: "Video upload",
  subtitles: "Subtitles",
  humanTranscript: "Human transcript",
  textUpload: "Text upload",
}

// SVG Components for each file type
const FolderIcon = ({ className }: { className?: string }) => (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className={className} fill="none">
    <path
      d="M3 7v10c0 1.1.9 2 2 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z"
      stroke="#8B8B8B"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
)

const WordIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M17.7775 0H2.2225C1 0 0 1 0 2.2225V17.7775C0 19 1 20 2.2225 20H17.7775C19 20 20 19 20 17.7775V2.2225C20 1 19 0 17.7775 0ZM13.89 15.555H12.2213L10 7.2225L7.7775 15.555H6.1125L3.445 4.445H5.3325L7.045 12.7887L9.2225 4.445H10.7775L12.9663 12.7887L14.6663 4.445H16.555L13.8888 15.555H13.89Z"
      fill="#3F76FF"
    />
  </svg>
)

const ClipIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M17.7773 0C18.9996 0 20 1.00043 20 2.22266V17.7773C20 18.9996 18.9996 20 17.7773 20H2.22266C1.00043 20 0 18.9996 0 17.7773V2.22266C0 1.00043 1.00043 0 2.22266 0H17.7773ZM6.13574 3.33301C5.36525 3.33301 4.70495 3.59407 4.15625 4.11621C3.60752 4.63843 3.33301 5.26667 3.33301 6C3.33301 6.73333 3.60752 7.36157 4.15625 7.88379C4.70495 8.40592 5.36525 8.66699 6.13574 8.66699C6.33401 8.66697 6.5322 8.6495 6.73047 8.61621C6.92886 8.58289 7.11596 8.52242 7.29102 8.43359L8.9375 10L7.29102 11.5664C7.11596 11.4776 6.92886 11.4171 6.73047 11.3838C6.5322 11.3505 6.33401 11.333 6.13574 11.333C5.36525 11.333 4.70495 11.5941 4.15625 12.1162C3.60752 12.6384 3.33301 13.2667 3.33301 14C3.33301 14.7333 3.60752 15.3616 4.15625 15.8838C4.70495 16.4059 5.36525 16.667 6.13574 16.667C6.90602 16.6669 7.56567 16.4058 8.11426 15.8838C8.66299 15.3616 8.9375 14.7333 8.9375 14C8.9375 13.8112 8.91976 13.6224 8.88477 13.4336C8.84977 13.2448 8.78567 13.0669 8.69238 12.9004L10.3379 11.333L14.9443 15.7168C15.0377 15.8056 15.146 15.8748 15.2686 15.9248C15.391 15.9747 15.5163 16 15.6445 16C16.0882 16 16.3981 15.8081 16.5732 15.4248C16.7482 15.0416 16.6774 14.7003 16.3623 14.4004L8.69238 7.09961C8.78567 6.93305 8.84977 6.75515 8.88477 6.56641C8.91976 6.3776 8.9375 6.18881 8.9375 6C8.9375 5.26667 8.66299 4.63843 8.11426 4.11621C7.56567 3.59423 6.90602 3.3331 6.13574 3.33301ZM6.13574 12.667C6.52085 12.6671 6.85073 12.7976 7.125 13.0586C7.39921 13.3197 7.53613 13.6334 7.53613 14C7.53613 14.3666 7.39921 14.6803 7.125 14.9414C6.85073 15.2024 6.52085 15.3329 6.13574 15.333C5.75047 15.333 5.41987 15.2025 5.14551 14.9414C4.87136 14.6804 4.73438 14.3665 4.73438 14C4.73438 13.6335 4.87136 13.3196 5.14551 13.0586C5.41987 12.7975 5.75047 12.667 6.13574 12.667ZM10.3379 9.66699C10.4313 9.66699 10.5139 9.69993 10.584 9.7666C10.6539 9.83323 10.6885 9.91119 10.6885 10C10.6885 10.0888 10.6539 10.1668 10.584 10.2334C10.5139 10.3001 10.4313 10.333 10.3379 10.333C10.2447 10.3329 10.1627 10.3 10.0928 10.2334C10.0228 10.1668 9.98828 10.0888 9.98828 10C9.98828 9.91119 10.0228 9.83323 10.0928 9.7666C10.1627 9.70005 10.2447 9.66711 10.3379 9.66699ZM15.6445 4C15.5163 4.00002 15.391 4.02529 15.2686 4.0752C15.146 4.12517 15.0377 4.19438 14.9443 4.2832L11.0391 8L12.4395 9.33301L16.3447 5.61621C16.66 5.31621 16.7337 4.9719 16.5645 4.58301C16.3952 4.19421 16.0881 4 15.6445 4ZM6.13574 4.66699C6.52085 4.66708 6.85073 4.79757 7.125 5.05859C7.39921 5.31966 7.53613 5.63344 7.53613 6C7.53613 6.36656 7.39921 6.68034 7.125 6.94141C6.85073 7.20243 6.52085 7.33292 6.13574 7.33301C5.75047 7.33301 5.41987 7.20252 5.14551 6.94141C4.87136 6.68036 4.73438 6.36652 4.73438 6C4.73438 5.63348 4.87136 5.31964 5.14551 5.05859C5.41987 4.79748 5.75047 4.66699 6.13574 4.66699Z"
      fill="#5614EB"
    />
  </svg>
)

const CaptionsIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M18 0C19.1046 2.57702e-07 20 0.895431 20 2V18C20 19.1046 19.1046 20 18 20H2C0.895431 20 1.61067e-08 19.1046 0 18V2C2.57706e-07 0.895431 0.895431 1.61064e-08 2 0H18ZM4.5 4C4.0875 4 3.73418 4.14583 3.44043 4.4375C3.14675 4.72914 3.00001 5.08142 3 5.49414V14.499C3 14.9118 3.14668 15.2657 3.44043 15.5596C3.73416 15.8534 4.08755 16 4.5 16H15.5C15.9125 16 16.2658 15.8542 16.5596 15.5625C16.8532 15.2709 17 14.9186 17 14.5059V5.50098C17 5.0882 16.8533 4.73432 16.5596 4.44043C16.2658 4.14661 15.9125 4 15.5 4H4.5ZM15.5 5.5V14.5H4.5V5.5H15.5ZM6.10449 7.66699C5.88213 7.66699 5.69759 7.7409 5.55176 7.88965C5.40598 8.03824 5.33301 8.2227 5.33301 8.44238V11.5459C5.33312 11.7654 5.40702 11.9518 5.55469 12.1045C5.70232 12.2573 5.88603 12.333 6.10449 12.333H8.45801C8.68037 12.333 8.86491 12.2595 9.01074 12.1113C9.15654 11.9633 9.22946 11.7795 9.22949 11.5605V11.1738C9.22946 11.058 9.18769 10.9583 9.10449 10.875C9.02116 10.7917 8.92361 10.75 8.8125 10.75H8.47949C8.36838 10.75 8.27083 10.7917 8.1875 10.875C8.10417 10.9583 8.0625 11.0559 8.0625 11.167H6.5V8.83301H8.0625C8.0625 8.94412 8.10417 9.04167 8.1875 9.125C8.27083 9.20833 8.36838 9.25 8.47949 9.25H8.8125C8.92361 9.25 9.02116 9.20833 9.10449 9.125C9.18769 9.04173 9.22946 8.94201 9.22949 8.82617V8.43945C9.22946 8.22049 9.15555 8.0367 9.00781 7.88867C8.86017 7.74048 8.67648 7.66699 8.45801 7.66699H6.10449ZM11.542 7.66699C11.3196 7.66699 11.1351 7.74286 10.9893 7.89453C10.8437 8.0462 10.7706 8.23402 10.7705 8.45801V11.5586C10.7706 11.778 10.8446 11.962 10.9922 12.1104C11.14 12.259 11.3237 12.333 11.542 12.333H13.8955C14.1179 12.333 14.3024 12.2595 14.4482 12.1113C14.594 11.9633 14.667 11.7795 14.667 11.5605V11.1738C14.667 11.058 14.6252 10.9583 14.542 10.875C14.4587 10.7917 14.3611 10.75 14.25 10.75H13.917C13.8059 10.75 13.7083 10.7917 13.625 10.875C13.5417 10.9583 13.5 11.0559 13.5 11.167H11.9375V8.83301H13.5C13.5 8.94412 13.5417 9.04167 13.625 9.125C13.7083 9.20833 13.8059 9.25 13.917 9.25H14.25C14.3611 9.25 14.4587 9.20833 14.542 9.125C14.6252 9.04173 14.667 8.94201 14.667 8.82617V8.43945C14.667 8.22049 14.5931 8.0367 14.4453 7.88867C14.2975 7.74048 14.1138 7.66699 13.8955 7.66699H11.542Z"
      fill="#5614EB"
    />
  </svg>
)

const CSVIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <g clipPath="url(#clip0_2825_20092)">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M17.7775 0H2.2225C1 0 0.01 1 0.01 2.2225L0 5.555V17.7775C0 19 1 20 2.2225 20H17.7775C19 20 20 19 20 17.7775V2.2225C20 1 19 0 17.7775 0ZM17.7775 8.88875H8.89V17.7775H6.665V8.89H2.2225V6.665H6.66625V2.2225H8.88875V6.66625H17.7775V8.88875Z"
        fill="#008E64"
      />
    </g>
    <defs>
      <clipPath id="clip0_2825_20092">
        <rect width="20" height="20" fill="white" />
      </clipPath>
    </defs>
  </svg>
)

const TranscriptIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M17.7778 0H2.22222C1 0 0 1 0 2.22222V17.7778C0 19 1 20 2.22222 20H17.7778C19 20 20 19 20 17.7778V2.22222C20 1 19 0 17.7778 0ZM11.1111 15.5556H5.55556C4.94444 15.5556 4.44444 15.0556 4.44444 14.4444C4.44444 13.8333 4.94444 13.3333 5.55556 13.3333H11.1111C11.7222 13.3333 12.2222 13.8333 12.2222 14.4444C12.2222 15.0556 11.7222 15.5556 11.1111 15.5556ZM14.4444 11.1111H5.55556C4.94444 11.1111 4.44444 10.6111 4.44444 10C4.44444 9.38889 4.94444 8.88889 5.55556 8.88889H14.4444C15.0556 8.88889 15.5556 9.38889 15.5556 10C15.5556 10.6111 15.0556 11.1111 14.4444 11.1111ZM14.4444 6.66667H5.55556C4.94444 6.66667 4.44444 6.16667 4.44444 5.55556C4.44444 4.94444 4.94444 4.44444 5.55556 4.44444H14.4444C15.0556 4.44444 15.5556 4.94444 15.5556 5.55556C15.5556 6.16667 15.0556 6.66667 14.4444 6.66667Z"
      fill="#5614EB"
    />
  </svg>
)

const AIInsightIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M17.7773 0C18.9996 0 20 1.00043 20 2.22266V17.7773C20 18.9996 18.9996 20 17.7773 20H2.22266C1.00043 20 0 18.9996 0 17.7773V2.22266C0 1.00043 1.00043 0 2.22266 0H17.7773ZM7.9873 5.60742C7.82359 5.60742 7.6636 5.65738 7.5293 5.75098C7.39496 5.84466 7.29193 5.97719 7.23535 6.13086L6.2793 8.72461L3.68164 9.68066C3.5281 9.73727 3.39538 9.83943 3.30176 9.97363C3.20813 10.1079 3.1582 10.2679 3.1582 10.4316C3.15826 10.5953 3.20811 10.7554 3.30176 10.8896C3.39541 11.0238 3.5281 11.1261 3.68164 11.1826L6.27539 12.1436L7.23145 14.7393C7.28802 14.8929 7.39015 15.0255 7.52441 15.1191C7.65874 15.2128 7.81865 15.2627 7.98242 15.2627C8.14622 15.2627 8.30608 15.2128 8.44043 15.1191C8.57472 15.0255 8.67681 14.8929 8.7334 14.7393L9.68945 12.1445L12.2861 11.1895C12.4398 11.1329 12.5733 11.0298 12.667 10.8955C12.7605 10.7613 12.8105 10.6011 12.8105 10.4375C12.8105 10.2739 12.7606 10.1137 12.667 9.97949C12.5733 9.84525 12.4398 9.74307 12.2861 9.68652L12.2891 9.68359L9.69336 8.72754L8.73828 6.13086C8.68171 5.97731 8.57952 5.84463 8.44531 5.75098C8.31105 5.65734 8.151 5.60748 7.9873 5.60742ZM15.2842 8.0791C15.1776 8.07914 15.0754 8.12102 15 8.19629C14.9246 8.27172 14.8818 8.37477 14.8818 8.48145V8.88281H14.4795C14.3729 8.88288 14.2707 8.92563 14.1953 9.00098C14.1199 9.07634 14.0772 9.17858 14.0771 9.28516C14.0771 9.39183 14.1199 9.49488 14.1953 9.57031C14.2707 9.64553 14.373 9.68744 14.4795 9.6875H14.8818V10.0898C14.8818 10.1965 14.9246 10.2986 15 10.374C15.0754 10.4494 15.1775 10.4921 15.2842 10.4922C15.3908 10.4922 15.4929 10.4494 15.5684 10.374C15.6438 10.2986 15.6865 10.1965 15.6865 10.0898V9.6875H16.0889C16.1954 9.6875 16.2976 9.64549 16.373 9.57031C16.4485 9.49488 16.4912 9.39183 16.4912 9.28516C16.4911 9.17858 16.4484 9.07634 16.373 9.00098C16.2976 8.92567 16.1955 8.88281 16.0889 8.88281H15.6865V8.48145C15.6865 8.37477 15.6438 8.27172 15.5684 8.19629C15.4929 8.12108 15.3907 8.0791 15.2842 8.0791ZM12.8701 5.2627C12.7636 5.26281 12.6613 5.30553 12.5859 5.38086C12.5106 5.45621 12.4679 5.55849 12.4678 5.66504V6.46973H11.6641C11.5574 6.46973 11.4544 6.51246 11.3789 6.58789C11.3036 6.6633 11.2617 6.76552 11.2617 6.87207C11.2617 6.97863 11.3036 7.08084 11.3789 7.15625C11.4544 7.23168 11.5574 7.27441 11.6641 7.27441H12.4678V8.0791C12.4679 8.18565 12.5106 8.28793 12.5859 8.36328C12.6613 8.43861 12.7636 8.48133 12.8701 8.48145C12.9768 8.48145 13.0798 8.43871 13.1553 8.36328C13.2306 8.28794 13.2724 8.18562 13.2725 8.0791V7.27441H14.0771C14.1838 7.27441 14.2869 7.23168 14.3623 7.15625C14.4376 7.08085 14.4795 6.9786 14.4795 6.87207C14.4795 6.76554 14.4376 6.66329 14.3623 6.58789C14.2869 6.51246 14.1838 6.46973 14.0771 6.46973H13.2725V5.66504C13.2724 5.55852 13.2306 5.4562 13.1553 5.38086C13.0798 5.30543 12.9768 5.2627 12.8701 5.2627Z"
      fill="#5614EB"
    />
  </svg>
)

const HumanCaptionsIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M18 0C19.1046 2.57702e-07 20 0.895431 20 2V18C20 19.1046 19.1046 20 18 20H2C0.895431 20 1.61067e-08 19.1046 0 18V2C2.57706e-07 0.895431 0.895431 1.61064e-08 2 0H18ZM16.2539 13C16.0429 13.0001 15.8657 13.0723 15.7217 13.2158C15.5774 13.3596 15.5049 13.5375 15.5049 13.75V14.5H14.7529C14.5397 14.5 14.3601 14.5721 14.2158 14.7158C14.0719 14.8595 14 15.0377 14 15.25C14 15.4623 14.0719 15.6405 14.2158 15.7842C14.3601 15.9279 14.5397 16 14.7529 16H15.5049V16.75C15.5049 16.9625 15.5774 17.1404 15.7217 17.2842C15.8658 17.4279 16.0417 17.5 16.25 17.5C16.4623 17.5 16.6405 17.4281 16.7842 17.2842C16.9279 17.1399 17 16.9603 17 16.7471V15.9951H17.75C17.9625 15.9951 18.1404 15.9226 18.2842 15.7783C18.4277 15.6343 18.4999 15.4571 18.5 15.2461C18.5 15.035 18.4269 14.8577 18.2812 14.7148C18.1355 14.572 17.9571 14.5001 17.7461 14.5H17V13.75C17 13.5375 16.9281 13.3596 16.7852 13.2158C16.6423 13.0722 16.4651 13 16.2539 13ZM4.5 4C4.0875 4 3.73418 4.14583 3.44043 4.4375C3.14675 4.72914 3.00001 5.08142 3 5.49414V14.499C3 14.9118 3.14668 15.2657 3.44043 15.5596C3.73416 15.8534 4.08755 16 4.5 16H11.75C11.9625 16 12.1404 15.927 12.2842 15.7812C12.4278 15.6355 12.4999 15.4571 12.5 15.2461C12.5 15.0349 12.4278 14.8577 12.2842 14.7148C12.1404 14.5719 11.9625 14.5 11.75 14.5H4.5V5.5H15.5V10.75C15.5 10.9625 15.573 11.1404 15.7188 11.2842C15.8645 11.4278 16.0429 11.4999 16.2539 11.5C16.465 11.5 16.6423 11.4269 16.7852 11.2812C16.928 11.1355 17 10.9564 17 10.7441V5.49902C17 5.0869 16.8532 4.73386 16.5596 4.44043C16.2658 4.14696 15.9125 4 15.5 4H4.5ZM6.10449 7.66699C5.88602 7.66699 5.70233 7.7409 5.55469 7.88965C5.40697 8.03825 5.33301 8.2227 5.33301 8.44238V11.5459C5.33312 11.7654 5.40786 11.9518 5.55664 12.1045C5.7055 12.2572 5.89029 12.333 6.11035 12.333H8.44043C8.66057 12.333 8.84722 12.2571 9 12.1055C9.15258 11.9538 9.22942 11.7661 9.22949 11.542V11.125C9.22949 10.9722 9.16981 10.8368 9.05176 10.7188C8.93374 10.6008 8.79821 10.542 8.64551 10.542C8.49286 10.5421 8.35723 10.6008 8.23926 10.7188C8.12131 10.8368 8.0625 10.9744 8.0625 11.1309V11.167H6.5V8.83301H8.0625V8.86914C8.0625 9.0256 8.12131 9.16323 8.23926 9.28125C8.35723 9.39922 8.49286 9.45792 8.64551 9.45801C8.79821 9.45801 8.93374 9.3992 9.05176 9.28125C9.16981 9.16319 9.22949 9.02778 9.22949 8.875V8.44629C9.22949 8.22548 9.15457 8.04006 9.00488 7.89062C8.85523 7.74125 8.66949 7.66707 8.44824 7.66699H6.10449ZM11.542 7.66699C11.3237 7.66699 11.14 7.7409 10.9922 7.88965C10.8445 8.03825 10.7705 8.2227 10.7705 8.44238V11.5459C10.7706 11.7654 10.8454 11.9518 10.9941 12.1045C11.143 12.2572 11.3278 12.333 11.5479 12.333H13.8779C14.0981 12.333 14.2847 12.2571 14.4375 12.1055C14.5901 11.9538 14.6669 11.7661 14.667 11.542V11.125C14.667 10.9722 14.6073 10.8368 14.4893 10.7188C14.3712 10.6008 14.2357 10.542 14.083 10.542C13.9304 10.5421 13.7947 10.6008 13.6768 10.7188C13.5588 10.8368 13.5 10.9744 13.5 11.1309V11.167H11.9375V8.83301H13.5V8.86914C13.5 9.0256 13.5588 9.16323 13.6768 9.28125C13.7947 9.39922 13.9304 9.45792 14.083 9.45801C14.2357 9.45801 14.3712 9.3992 14.4893 9.28125C14.6073 9.16319 14.667 9.02778 14.667 8.875V8.44629C14.667 8.22548 14.5921 8.04006 14.4424 7.89062C14.2927 7.74125 14.107 7.66707 13.8857 7.66699H11.542Z"
      fill="#5614EB"
    />
  </svg>
)

const PDFIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M17.5 0H2.5C1.125 0 0 1.125 0 2.5V17.5C0 18.875 1.125 20 2.5 20H17.5C18.875 20 20 18.875 20 17.5V2.5C20 1.125 18.875 0 17.5 0ZM6.875 9.375C6.875 10.4125 6.0375 11.25 5 11.25H3.75V12.8125C3.75 13.325 3.325 13.75 2.8125 13.75C2.3 13.75 1.875 13.325 1.875 12.8125V7.5C1.875 6.8125 2.4375 6.25 3.125 6.25H5C6.0375 6.25 6.875 7.0875 6.875 8.125V9.375ZM13.125 11.875C13.125 12.9125 12.2875 13.75 11.25 13.75H8.75C8.4 13.75 8.125 13.475 8.125 13.125V6.875C8.125 6.525 8.4 6.25 8.75 6.25H11.25C12.2875 6.25 13.125 7.0875 13.125 8.125V11.875ZM18.125 7.1875C18.125 7.7 17.7 8.125 17.1875 8.125H16.25V9.375H17.1875C17.7 9.375 18.125 9.8 18.125 10.3125C18.125 10.825 17.7 11.25 17.1875 11.25H16.25V12.8125C16.25 13.325 15.825 13.75 15.3125 13.75C14.8 13.75 14.375 13.325 14.375 12.8125V7.5C14.375 6.8125 14.9375 6.25 15.625 6.25H17.1875C17.7 6.25 18.125 6.675 18.125 7.1875ZM3.75 9.375H5V8.125H3.75V9.375ZM10 11.875H11.25V8.125H10V11.875Z"
      fill="#D0362F"
    />
  </svg>
)

const VideoUploadIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M10.3643 3.77832C10.7548 4.16852 11.3879 4.16867 11.7783 3.77832C12.1687 3.3879 12.1685 2.75481 11.7783 2.36426L9.41406 0H11.5859L15.3643 3.77832C15.7548 4.16852 16.3879 4.16867 16.7783 3.77832C17.1687 3.3879 17.1685 2.75481 16.7783 2.36426L14.4141 0H18C19.1046 2.57702e-07 20 0.895431 20 2V18C20 19.1046 19.1046 20 18 20H2C0.895431 20 1.61067e-08 19.1046 0 18V2C2.27555e-07 1.02467 0.698245 0.212854 1.62207 0.0361328L5.36426 3.77832C5.75478 4.16852 6.38789 4.16867 6.77832 3.77832C7.16875 3.3879 7.16855 2.75481 6.77832 2.36426L4.41406 0H6.58594L10.3643 3.77832Z"
      fill="#D0362F"
    />
  </svg>
)

const SubtitlesIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M18 0C19.1046 2.57702e-07 20 0.895431 20 2V18C20 19.1046 19.1046 20 18 20H2C0.895431 20 1.61067e-08 19.1046 0 18V2C2.57706e-07 0.895431 0.895431 1.61064e-08 2 0H18ZM3.5 4C3.0875 4 2.73418 4.14583 2.44043 4.4375C2.14675 4.72914 2.00001 5.08142 2 5.49414V14.499C2 14.9118 2.14668 15.2657 2.44043 15.5596C2.73416 15.8534 3.08755 16 3.5 16H16.5C16.9125 16 17.2658 15.8542 17.5596 15.5625C17.8532 15.2709 18 14.9186 18 14.5059V5.50098C18 5.0882 17.8533 4.73432 17.5596 4.44043C17.2658 4.14661 16.9125 4 16.5 4H3.5ZM16.5 5.5V14.5H3.5V5.5H16.5ZM5.75 11.5C5.5375 11.5 5.35957 11.5719 5.21582 11.7148C5.07216 11.8577 5 12.0349 5 12.2461C5.00011 12.4571 5.07218 12.6355 5.21582 12.7812C5.35955 12.927 5.53755 13 5.75 13H11.25C11.4625 13 11.6404 12.9281 11.7842 12.7852C11.9278 12.6423 12 12.4651 12 12.2539C11.9999 12.0429 11.9278 11.8645 11.7842 11.7188C11.6404 11.573 11.4625 11.5 11.25 11.5H5.75ZM14.2539 11.5C14.0429 11.5001 13.8645 11.572 13.7188 11.7148C13.5731 11.8577 13.5 12.035 13.5 12.2461C13.5001 12.4571 13.572 12.6355 13.7148 12.7812C13.8577 12.9269 14.035 13 14.2461 13C14.4571 12.9999 14.6355 12.928 14.7812 12.7852C14.9269 12.6423 15 12.465 15 12.2539C14.9999 12.0429 14.928 11.8645 14.7852 11.7188C14.6423 11.5731 14.465 11.5 14.2539 11.5ZM5.75391 8.5C5.54286 8.50011 5.36448 8.57203 5.21875 8.71484C5.07307 8.85772 5 9.03496 5 9.24609C5.00011 9.45714 5.07203 9.63552 5.21484 9.78125C5.35772 9.92693 5.53496 10 5.74609 10C5.95714 9.99989 6.13552 9.92797 6.28125 9.78516C6.42693 9.64228 6.5 9.46504 6.5 9.25391C6.49989 9.04286 6.42797 8.86448 6.28516 8.71875C6.14228 8.57307 5.96504 8.5 5.75391 8.5ZM8.75 8.5C8.5375 8.5 8.35957 8.57193 8.21582 8.71484C8.07216 8.85774 8 9.03491 8 9.24609C8.00011 9.45714 8.07218 9.63552 8.21582 9.78125C8.35955 9.92702 8.53755 10 8.75 10H14.25C14.4625 10 14.6404 9.92807 14.7842 9.78516C14.9278 9.64226 15 9.46509 15 9.25391C14.9999 9.04286 14.9278 8.86448 14.7842 8.71875C14.6404 8.57298 14.4625 8.5 14.25 8.5H8.75Z"
      fill="#5614EB"
    />
  </svg>
)

const HumanTranscriptIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M17.7773 0C18.9996 0 20 1.00043 20 2.22266V17.7773C20 18.9996 18.9996 20 17.7773 20H2.22266C1.00043 20 0 18.9996 0 17.7773V2.22266C0 1.00043 1.00043 0 2.22266 0H17.7773ZM5.55566 14.4443C4.94455 14.4443 4.44434 14.9446 4.44434 15.5557C4.44439 16.1667 4.94459 16.667 5.55566 16.667H14.4443C15.0554 16.667 15.5556 16.1667 15.5557 15.5557C15.5557 14.9446 15.0554 14.4443 14.4443 14.4443H5.55566ZM10 9.58301C9.23619 9.58301 8.48383 9.67318 7.74316 9.85254C7.00244 10.0319 6.27324 10.3014 5.55566 10.6602C5.22002 10.8338 4.95059 11.0852 4.74805 11.415C4.54554 11.7449 4.44434 12.1065 4.44434 12.5C4.44434 12.9601 4.81723 13.3329 5.27734 13.333H14.7217C15.1819 13.333 15.5557 12.9602 15.5557 12.5C15.5557 12.1066 15.4544 11.7448 15.252 11.415C15.0494 11.0852 14.7799 10.8338 14.4443 10.6602C13.7268 10.3014 12.9976 10.0319 12.2568 9.85254C11.5161 9.67315 10.7638 9.58302 10 9.58301ZM10 3.33301C9.23611 3.33301 8.58207 3.60543 8.03809 4.14941C7.49412 4.69339 7.22168 5.34745 7.22168 6.11133C7.22173 6.87512 7.49416 7.52931 8.03809 8.07324C8.58203 8.6171 9.2362 8.88867 10 8.88867C10.7638 8.88863 11.418 8.61717 11.9619 8.07324C12.5058 7.52931 12.7773 6.87512 12.7773 6.11133C12.7773 5.34753 12.5058 4.69336 11.9619 4.14941C11.418 3.60547 10.7638 3.33304 10 3.33301Z"
      fill="#5614EB"
    />
  </svg>
)

const TextUploadIcon = ({ className }: { className?: string }) => (
  <svg viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className}>
    <path
      d="M18 0C19.1046 2.57702e-07 20 0.895431 20 2V18C20 19.1046 19.1046 20 18 20H2C0.895431 20 1.61067e-08 19.1046 0 18V2C2.57706e-07 0.895431 0.895431 1.61064e-08 2 0H18ZM8.00098 6C7.62929 6 7.38749 6.39118 7.55371 6.72363L9.19141 10L7.55371 13.2764C7.38749 13.6088 7.62929 14 8.00098 14H8.88281C9.07207 13.9999 9.24541 13.8929 9.33008 13.7236L10.1914 12L11.0537 13.7236C11.1384 13.893 11.3116 14 11.501 14H12.3828C12.7543 13.9998 12.9962 13.6087 12.8301 13.2764L11.1914 10L12.8301 6.72363C12.9962 6.39129 12.7543 6.00019 12.3828 6H11.501C11.3116 6 11.1384 6.10704 11.0537 6.27637L10.1914 8L9.33008 6.27637C9.24541 6.10709 9.07207 6.0001 8.88281 6H8.00098ZM2.58008 6C2.20052 6.01432 2.00716 6.1862 2 6.51562V7.18164C2.00716 7.51107 2.20052 7.68294 2.58008 7.69727H3.33203V13.3047C3.36784 13.6771 3.57552 13.8704 3.95508 13.8848H4.81445C5.17969 13.8561 5.38021 13.6628 5.41602 13.3047V7.69727H6.14648C6.52604 7.68294 6.7194 7.51107 6.72656 7.18164V6.51562C6.7194 6.1862 6.52604 6.01432 6.14648 6H2.58008ZM14.2148 6C13.8353 6.01432 13.6419 6.1862 13.6348 6.51562V7.18164C13.6419 7.51107 13.8353 7.68294 14.2148 7.69727H14.9668V13.3047C15.0026 13.6771 15.2103 13.8704 15.5898 13.8848H16.4492C16.8145 13.8561 17.015 13.6628 17.0508 13.3047V7.69727H17.7812C18.1608 7.68294 18.3542 7.51107 18.3613 7.18164V6.51562C18.3542 6.1862 18.1608 6.01432 17.7812 6H14.2148Z"
      fill="#D0362F"
    />
  </svg>
)

// Map file types to their SVG components
const fileTypeToIcon: Record<FileType, React.FC<{ className?: string }>> = {
  folder: FolderIcon,
  word: WordIcon,
  clip: ClipIcon,
  captions: CaptionsIcon,
  csv: CSVIcon,
  transcript: TranscriptIcon,
  aiInsight: AIInsightIcon,
  humanCaptions: HumanCaptionsIcon,
  pdf: PDFIcon,
  videoUpload: VideoUploadIcon,
  subtitles: SubtitlesIcon,
  humanTranscript: HumanTranscriptIcon,
  textUpload: TextUploadIcon,
}

export interface FileTypeIconComponentProps extends FileTypeIconProps {
  type: FileType
}

export const FileTypeIcon: React.FC<FileTypeIconComponentProps> = ({
  type,
  label,
  showLabel = false,
  size = "md",
  variant = "icon",
  className,
  ...props
}) => {
  const IconComponent = fileTypeToIcon[type]
  const displayLabel = label || fileTypeToLabel[type]

  const sizeClasses = {
    sm: "h-6 w-6",
    md: "h-8 w-8",
    lg: "h-10 w-10",
  }

  const labelSizeClasses = {
    sm: "text-xs",
    md: "text-sm",
    lg: "text-base",
  }

  if (variant === "icon") {
    return (
      <div className={cn("flex items-center gap-2", className)} {...props}>
        <div className={cn("flex-shrink-0", sizeClasses[size])}>
          <IconComponent className="h-full w-full" />
        </div>
        {showLabel && <span className={cn("font-medium", labelSizeClasses[size])}>{displayLabel}</span>}
      </div>
    )
  }

  if (variant === "pill") {
    return (
      <div className={cn("flex items-center gap-2", className)} {...props}>
        <div className="flex items-center gap-1.5 rounded-full bg-gray-900 px-3 py-1">
          <div className={cn("flex-shrink-0", sizeClasses.sm)}>
            <IconComponent className="h-full w-full" />
          </div>
          <span className="text-sm font-medium text-white">{displayLabel}</span>
        </div>
      </div>
    )
  }

  if (variant === "labeled") {
    return (
      <div className={cn("flex flex-col items-center gap-1", className)} {...props}>
        <div className={cn("flex-shrink-0", sizeClasses[size])}>
          <IconComponent className="h-full w-full" />
        </div>
        <span className={cn("rounded bg-gray-900 px-2 py-0.5 text-white font-medium", labelSizeClasses[size])}>
          {displayLabel}
        </span>
      </div>
    )
  }

  return null
}
